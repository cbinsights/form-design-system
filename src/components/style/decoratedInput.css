.fdsDecoratedInput {
  display: flex;
  flex-grow: 1;
  flex-wrap: nowrap;
  box-sizing: border-box;
}

.fdsDecoratedInput input {
  z-index: 2; /* focus ring should overlap side labels */
  flex-basis: 1; /* input should grow to fill space */
  flex-grow: 1;
  width: auto;
  min-width: 0;
  margin: 0;
}

.fdsDecoratedInput::before,
.fdsDecoratedInput::after {
  z-index: 1;
  flex: 0 0 auto;
  width: initial;
  background: var(--color-lightGray);
  color: var(--font-color-primary);

  /* match `input` border */
  border: 1px solid rgb(var(--rgb-charcoal) 0.24);

  /* use line box to center text and match input height */
  padding: 0 var(--space-s);
  display: inline-flex;
  align-items: center;
}

.fdsDecoratedInput[data-before] input {
  border-top-left-radius: 0 !important;
  border-bottom-left-radius: 0 !important;
  border-left: 1px solid rgb(var(--rgb-charcoal) 0.24);
}

.fdsDecoratedInput[data-after] input {
  border-top-right-radius: 0 !important;
  border-bottom-right-radius: 0 !important;
  border-right: 1px solid rgb(var(--rgb-charcoal) 0.24);
}

.fdsDecoratedInput[data-before]::before {
  content: attr(data-before);
  border-top-left-radius: var(--border-radius-default);
  border-bottom-left-radius: var(--border-radius-default);
  border-right-width: 0;
}

.fdsDecoratedInput[data-after]::after {
  content: attr(data-after);
  border-top-right-radius: var(--border-radius-default);
  border-bottom-right-radius: var(--border-radius-default);
  border-left-width: 0;
}
